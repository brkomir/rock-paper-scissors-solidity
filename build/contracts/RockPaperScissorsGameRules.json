{
  "contractName": "RockPaperScissorsGameRules",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum RockPaperScissorsGameRules.Choice",
          "name": "_player1Choice",
          "type": "uint8"
        },
        {
          "internalType": "enum RockPaperScissorsGameRules.Choice",
          "name": "_player2Choice",
          "type": "uint8"
        }
      ],
      "name": "confront",
      "outputs": [
        {
          "internalType": "enum RockPaperScissorsGameRules.Outcome",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_secretChoice",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_secret",
          "type": "bytes32"
        }
      ],
      "name": "decodeSecretChoice",
      "outputs": [
        {
          "internalType": "enum RockPaperScissorsGameRules.Choice",
          "name": "choice",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum RockPaperScissorsGameRules.Choice\",\"name\":\"_player1Choice\",\"type\":\"uint8\"},{\"internalType\":\"enum RockPaperScissorsGameRules.Choice\",\"name\":\"_player2Choice\",\"type\":\"uint8\"}],\"name\":\"confront\",\"outputs\":[{\"internalType\":\"enum RockPaperScissorsGameRules.Outcome\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_secretChoice\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_secret\",\"type\":\"bytes32\"}],\"name\":\"decodeSecretChoice\",\"outputs\":[{\"internalType\":\"enum RockPaperScissorsGameRules.Choice\",\"name\":\"choice\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RockPaperScissorsGame.sol\":\"RockPaperScissorsGameRules\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/RockPaperScissorsGame.sol\":{\"keccak256\":\"0xcae7962102be1167e67c896dfa1e2bb8863341fd77224eb36025ef05378f285b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8ec8f32dfdb90ef485f940d3c81b31c502c7d18a69ab3be4019abcf6767d3ae\",\"dweb:/ipfs/QmNutQCDgEGCQ9HbcA2AUad3PSmPbz9qU3UPbPizL9NKVU\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600260008080600281111561002957610028610134565b5b600281111561003b5761003a610134565b5b815260200190815260200160002060006101000a81548160ff0219169083600281111561006b5761006a610134565b5b021790555060008060006001600281111561008957610088610134565b5b600281111561009b5761009a610134565b5b815260200190815260200160002060006101000a81548160ff021916908360028111156100cb576100ca610134565b5b021790555060016000806002808111156100e8576100e7610134565b5b60028111156100fa576100f9610134565b5b815260200190815260200160002060006101000a81548160ff0219169083600281111561012a57610129610134565b5b0217905550610163565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6104cb806101726000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631ef80bdd1461003b5780633a53dfd11461006b575b600080fd5b6100556004803603810190610050919061023e565b61009c565b60405161006291906102f5565b60405180910390f35b61008560048036038101906100809190610346565b610154565b6040516100939291906103e9565b60405180910390f35b60008160028111156100b1576100b061027e565b5b8360028111156100c4576100c361027e565b5b036100d2576002905061014e565b8160028111156100e5576100e461027e565b5b6000808560028111156100fb576100fa61027e565b5b600281111561010d5761010c61027e565b5b815260200190815260200160002060009054906101000a900460ff16600281111561013b5761013a61027e565b5b03610149576000905061014e565b600190505b92915050565b6000806001905083600084604051602001610170929190610469565b6040516020818303038152906040528051906020012003610194576000915061020d565b836001846040516020016101a9929190610469565b60405160208183030381529060405280519060200120036101cd576001915061020c565b836002846040516020016101e2929190610469565b6040516020818303038152906040528051906020012003610206576002915061020b565b600090505b5b5b9250929050565b600080fd5b6003811061022657600080fd5b50565b60008135905061023881610219565b92915050565b6000806040838503121561025557610254610214565b5b600061026385828601610229565b925050602061027485828601610229565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106102be576102bd61027e565b5b50565b60008190506102cf826102ad565b919050565b60006102df826102c1565b9050919050565b6102ef816102d4565b82525050565b600060208201905061030a60008301846102e6565b92915050565b6000819050919050565b61032381610310565b811461032e57600080fd5b50565b6000813590506103408161031a565b92915050565b6000806040838503121561035d5761035c610214565b5b600061036b85828601610331565b925050602061037c85828601610331565b9150509250929050565b600381106103975761039661027e565b5b50565b60008190506103a882610386565b919050565b60006103b88261039a565b9050919050565b6103c8816103ad565b82525050565b60008115159050919050565b6103e3816103ce565b82525050565b60006040820190506103fe60008301856103bf565b61040b60208301846103da565b9392505050565b60008160f81b9050919050565b600061042a82610412565b9050919050565b61044261043d826103ad565b61041f565b82525050565b6000819050919050565b61046361045e82610310565b610448565b82525050565b60006104758285610431565b6001820191506104858284610452565b602082019150819050939250505056fea2646970667358221220b94d958f0bd7b3fe7e1f9328529cda24a8c8c5e0131b7e7f9407831ec6f884c364736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80631ef80bdd1461003b5780633a53dfd11461006b575b600080fd5b6100556004803603810190610050919061023e565b61009c565b60405161006291906102f5565b60405180910390f35b61008560048036038101906100809190610346565b610154565b6040516100939291906103e9565b60405180910390f35b60008160028111156100b1576100b061027e565b5b8360028111156100c4576100c361027e565b5b036100d2576002905061014e565b8160028111156100e5576100e461027e565b5b6000808560028111156100fb576100fa61027e565b5b600281111561010d5761010c61027e565b5b815260200190815260200160002060009054906101000a900460ff16600281111561013b5761013a61027e565b5b03610149576000905061014e565b600190505b92915050565b6000806001905083600084604051602001610170929190610469565b6040516020818303038152906040528051906020012003610194576000915061020d565b836001846040516020016101a9929190610469565b60405160208183030381529060405280519060200120036101cd576001915061020c565b836002846040516020016101e2929190610469565b6040516020818303038152906040528051906020012003610206576002915061020b565b600090505b5b5b9250929050565b600080fd5b6003811061022657600080fd5b50565b60008135905061023881610219565b92915050565b6000806040838503121561025557610254610214565b5b600061026385828601610229565b925050602061027485828601610229565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106102be576102bd61027e565b5b50565b60008190506102cf826102ad565b919050565b60006102df826102c1565b9050919050565b6102ef816102d4565b82525050565b600060208201905061030a60008301846102e6565b92915050565b6000819050919050565b61032381610310565b811461032e57600080fd5b50565b6000813590506103408161031a565b92915050565b6000806040838503121561035d5761035c610214565b5b600061036b85828601610331565b925050602061037c85828601610331565b9150509250929050565b600381106103975761039661027e565b5b50565b60008190506103a882610386565b919050565b60006103b88261039a565b9050919050565b6103c8816103ad565b82525050565b60008115159050919050565b6103e3816103ce565b82525050565b60006040820190506103fe60008301856103bf565b61040b60208301846103da565b9392505050565b60008160f81b9050919050565b600061042a82610412565b9050919050565b61044261043d826103ad565b61041f565b82525050565b6000819050919050565b61046361045e82610310565b610448565b82525050565b60006104758285610431565b6001820191506104858284610452565b602082019150819050939250505056fea2646970667358221220b94d958f0bd7b3fe7e1f9328529cda24a8c8c5e0131b7e7f9407831ec6f884c364736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:190:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:5",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:5"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:5"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5112:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:5",
                "type": ""
              }
            ],
            "src": "7:75:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:5"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:5"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "387:56:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "421:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "433:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "423:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "410:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "417:1:5",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "407:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "407:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "400:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:20:5"
                  },
                  "nodeType": "YulIf",
                  "src": "397:40:5"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Choice_$987",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "380:5:5",
                "type": ""
              }
            ],
            "src": "334:109:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:97:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "543:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "530:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "530:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "521:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "596:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Choice_$987",
                      "nodeType": "YulIdentifier",
                      "src": "559:36:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "559:43:5"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Choice_$987",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "489:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "497:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "505:5:5",
                "type": ""
              }
            ],
            "src": "449:159:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "717:411:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "763:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "765:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "765:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "765:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "738:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "747:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "759:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "730:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "730:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "727:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "856:127:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "871:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "885:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "875:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "900:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "945:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "956:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "941:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "941:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "965:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Choice_$987",
                          "nodeType": "YulIdentifier",
                          "src": "910:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "900:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "993:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1008:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1022:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1012:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1038:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1083:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1094:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1079:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1079:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1103:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Choice_$987",
                          "nodeType": "YulIdentifier",
                          "src": "1048:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1048:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1038:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Choice_$987t_enum$_Choice_$987",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "679:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "690:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "702:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "710:6:5",
                "type": ""
              }
            ],
            "src": "614:514:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1162:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1179:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1182:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1172:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1172:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1279:4:5",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1269:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1269:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1269:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1300:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1303:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1293:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1293:15:5"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1134:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1374:62:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1408:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1410:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1410:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1410:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1397:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1404:1:5",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1394:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1394:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1387:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:20:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1384:46:5"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Outcome_$991",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1367:5:5",
                "type": ""
              }
            ],
            "src": "1320:116:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1498:77:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1508:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1519:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1508:7:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1563:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Outcome_$991",
                      "nodeType": "YulIdentifier",
                      "src": "1525:37:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:44:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1525:44:5"
                }
              ]
            },
            "name": "cleanup_t_enum$_Outcome_$991",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1480:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1490:7:5",
                "type": ""
              }
            ],
            "src": "1442:133:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1650:64:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1660:48:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1702:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Outcome_$991",
                      "nodeType": "YulIdentifier",
                      "src": "1673:28:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1673:35:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1660:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Outcome_$991_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1630:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1640:9:5",
                "type": ""
              }
            ],
            "src": "1581:133:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1794:75:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1811:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1856:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Outcome_$991_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1816:39:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1816:46:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1804:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1804:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1804:59:5"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Outcome_$991_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1782:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1789:3:5",
                "type": ""
              }
            ],
            "src": "1720:149:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1982:133:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1992:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2004:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2015:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2000:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2000:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1992:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2081:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2094:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2105:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2090:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2090:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Outcome_$991_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2028:52:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2028:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2028:80:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_Outcome_$991__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1954:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1966:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1977:4:5",
                "type": ""
              }
            ],
            "src": "1875:240:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2166:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2176:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2187:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2176:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2148:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2158:7:5",
                "type": ""
              }
            ],
            "src": "2121:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2247:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2304:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2313:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2316:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2306:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2306:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2306:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2270:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2295:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "2277:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2277:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2267:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2267:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2257:63:5"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2240:5:5",
                "type": ""
              }
            ],
            "src": "2204:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2384:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2394:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2416:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2403:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2403:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2394:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2459:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "2432:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2432:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2432:33:5"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2362:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2370:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2378:5:5",
                "type": ""
              }
            ],
            "src": "2332:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2560:391:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2606:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2608:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2608:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2608:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2581:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2590:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2577:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2577:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2602:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2573:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2573:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2570:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2699:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2714:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2728:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2718:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2743:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2778:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2789:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2774:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2774:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2798:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2753:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2753:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2743:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2826:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2841:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2855:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2845:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2871:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2906:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2917:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2902:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2902:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2926:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2881:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2881:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2871:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2522:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2533:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2545:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2553:6:5",
                "type": ""
              }
            ],
            "src": "2477:474:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3010:62:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3044:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "3046:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3046:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3046:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3033:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3040:1:5",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3030:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3030:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3023:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3023:20:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3020:46:5"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Choice_$987",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3003:5:5",
                "type": ""
              }
            ],
            "src": "2957:115:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3133:76:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3143:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3154:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3143:7:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3197:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Choice_$987",
                      "nodeType": "YulIdentifier",
                      "src": "3160:36:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3160:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3160:43:5"
                }
              ]
            },
            "name": "cleanup_t_enum$_Choice_$987",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3115:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3125:7:5",
                "type": ""
              }
            ],
            "src": "3078:131:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3283:63:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3293:47:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3334:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Choice_$987",
                      "nodeType": "YulIdentifier",
                      "src": "3306:27:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3306:34:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3293:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Choice_$987_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3263:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3273:9:5",
                "type": ""
              }
            ],
            "src": "3215:131:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3425:74:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3442:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3486:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Choice_$987_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3447:38:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3447:45:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3435:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3435:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3435:58:5"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Choice_$987_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3413:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3420:3:5",
                "type": ""
              }
            ],
            "src": "3352:147:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3547:48:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3557:32:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3582:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3575:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3575:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3568:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3568:21:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3557:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3529:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3539:7:5",
                "type": ""
              }
            ],
            "src": "3505:90:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3660:50:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3677:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3697:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3682:14:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3682:21:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3670:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3670:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3670:34:5"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3648:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3655:3:5",
                "type": ""
              }
            ],
            "src": "3601:109:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3844:208:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3854:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3866:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3877:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3862:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3862:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3854:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3942:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3955:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3966:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3951:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3951:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Choice_$987_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3890:51:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3890:79:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3890:79:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4017:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4030:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4041:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4026:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4026:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3979:37:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3979:66:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3979:66:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_Choice_$987_t_bool__to_t_uint8_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3808:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3820:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3828:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3839:4:5",
                "type": ""
              }
            ],
            "src": "3716:336:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4101:53:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4111:36:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4136:3:5",
                        "type": "",
                        "value": "248"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4141:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "4132:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4132:15:5"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "4111:8:5"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_248",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4082:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "4092:8:5",
                "type": ""
              }
            ],
            "src": "4058:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4205:48:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4215:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4241:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_248",
                      "nodeType": "YulIdentifier",
                      "src": "4226:14:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4226:21:5"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "4215:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4187:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "4197:7:5",
                "type": ""
              }
            ],
            "src": "4160:93:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4350:93:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4367:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4429:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_enum$_Choice_$987_to_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "4390:38:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4390:45:5"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4372:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4372:64:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4360:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4360:77:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4360:77:5"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Choice_$987_to_t_uint8_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4338:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4345:3:5",
                "type": ""
              }
            ],
            "src": "4259:184:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4496:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4506:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4517:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "4506:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4478:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "4488:7:5",
                "type": ""
              }
            ],
            "src": "4449:79:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4617:74:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4634:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4677:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "4659:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4659:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "4639:19:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4639:45:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4627:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4627:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4627:58:5"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4605:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4612:3:5",
                "type": ""
              }
            ],
            "src": "4534:157:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4849:260:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4930:6:5"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4939:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Choice_$987_to_t_uint8_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4860:69:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4860:83:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4860:83:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4952:18:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4963:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4968:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4959:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4959:11:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4952:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5042:6:5"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5051:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4980:61:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4980:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4980:75:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5064:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5075:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5080:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5071:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5071:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5064:3:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5093:10:5",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5100:3:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5093:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_enum$_Choice_$987_t_bytes32__to_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4820:3:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4826:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4834:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4845:3:5",
                "type": ""
              }
            ],
            "src": "4697:412:5"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_Choice_$987(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Choice_$987(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Choice_$987(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Choice_$987t_enum$_Choice_$987(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Choice_$987(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Choice_$987(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Outcome_$991(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Outcome_$991(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Outcome_$991(value)\n    }\n\n    function convert_t_enum$_Outcome_$991_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Outcome_$991(value)\n    }\n\n    function abi_encode_t_enum$_Outcome_$991_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Outcome_$991_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Outcome_$991__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Outcome_$991_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_assert_t_enum$_Choice_$987(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Choice_$987(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Choice_$987(value)\n    }\n\n    function convert_t_enum$_Choice_$987_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Choice_$987(value)\n    }\n\n    function abi_encode_t_enum$_Choice_$987_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Choice_$987_to_t_uint8(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Choice_$987_t_bool__to_t_uint8_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_Choice_$987_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function shift_left_248(value) -> newValue {\n        newValue :=\n\n        shl(248, value)\n\n    }\n\n    function leftAlign_t_uint8(value) -> aligned {\n        aligned := shift_left_248(value)\n    }\n\n    function abi_encode_t_enum$_Choice_$987_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(convert_t_enum$_Choice_$987_to_t_uint8(value)))\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_enum$_Choice_$987_t_bytes32__to_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_enum$_Choice_$987_to_t_uint8_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 1)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "69:1795:4:-:0;;;315:158;;;;;;;;;;360:15;340:4;:17;345:11;340:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;407:11;386:4;:18;391:12;386:18;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;453:12;429:4;:21;434:15;429:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;69:1795;;7:180:5;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;69:1795:4;;;;;;;",
  "deployedSourceMap": "69:1795:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;481:376;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1154:707;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;481:376;593:7;640:14;622:32;;;;;;;;:::i;:::-;;:14;:32;;;;;;;;:::i;:::-;;;618:84;;678:12;671:19;;;;618:84;742:14;718:38;;;;;;;;:::i;:::-;;:4;:20;723:14;718:20;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:38;;;;;;;;:::i;:::-;;;714:97;;780:19;773:26;;;;714:97;830:19;823:26;;481:376;;;;;:::o;1154:707::-;1270:13;1285:12;1325:4;1315:14;;1413:13;1387:11;1400:7;1370:38;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1360:49;;;;;;:66;1342:512;;1462:11;1453:20;;1342:512;;;1563:13;1536:12;1550:7;1519:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1509:50;;;;;;:67;1491:363;;1612:12;1603:21;;1491:363;;;1730:13;1687:15;1704:7;1670:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1660:53;;;;;;:83;1642:212;;1779:15;1770:24;;1642:212;;;1837:5;1827:15;;1642:212;1491:363;1342:512;1154:707;;;;;:::o;88:117:5:-;197:1;194;187:12;334:109;417:1;410:5;407:12;397:40;;433:1;430;423:12;397:40;334:109;:::o;449:159::-;505:5;543:6;530:20;521:29;;559:43;596:5;559:43;:::i;:::-;449:159;;;;:::o;614:514::-;702:6;710;759:2;747:9;738:7;734:23;730:32;727:119;;;765:79;;:::i;:::-;727:119;885:1;910:63;965:7;956:6;945:9;941:22;910:63;:::i;:::-;900:73;;856:127;1022:2;1048:63;1103:7;1094:6;1083:9;1079:22;1048:63;:::i;:::-;1038:73;;993:128;614:514;;;;;:::o;1134:180::-;1182:77;1179:1;1172:88;1279:4;1276:1;1269:15;1303:4;1300:1;1293:15;1320:116;1404:1;1397:5;1394:12;1384:46;;1410:18;;:::i;:::-;1384:46;1320:116;:::o;1442:133::-;1490:7;1519:5;1508:16;;1525:44;1563:5;1525:44;:::i;:::-;1442:133;;;:::o;1581:::-;1640:9;1673:35;1702:5;1673:35;:::i;:::-;1660:48;;1581:133;;;:::o;1720:149::-;1816:46;1856:5;1816:46;:::i;:::-;1811:3;1804:59;1720:149;;:::o;1875:240::-;1977:4;2015:2;2004:9;2000:18;1992:26;;2028:80;2105:1;2094:9;2090:17;2081:6;2028:80;:::i;:::-;1875:240;;;;:::o;2121:77::-;2158:7;2187:5;2176:16;;2121:77;;;:::o;2204:122::-;2277:24;2295:5;2277:24;:::i;:::-;2270:5;2267:35;2257:63;;2316:1;2313;2306:12;2257:63;2204:122;:::o;2332:139::-;2378:5;2416:6;2403:20;2394:29;;2432:33;2459:5;2432:33;:::i;:::-;2332:139;;;;:::o;2477:474::-;2545:6;2553;2602:2;2590:9;2581:7;2577:23;2573:32;2570:119;;;2608:79;;:::i;:::-;2570:119;2728:1;2753:53;2798:7;2789:6;2778:9;2774:22;2753:53;:::i;:::-;2743:63;;2699:117;2855:2;2881:53;2926:7;2917:6;2906:9;2902:22;2881:53;:::i;:::-;2871:63;;2826:118;2477:474;;;;;:::o;2957:115::-;3040:1;3033:5;3030:12;3020:46;;3046:18;;:::i;:::-;3020:46;2957:115;:::o;3078:131::-;3125:7;3154:5;3143:16;;3160:43;3197:5;3160:43;:::i;:::-;3078:131;;;:::o;3215:::-;3273:9;3306:34;3334:5;3306:34;:::i;:::-;3293:47;;3215:131;;;:::o;3352:147::-;3447:45;3486:5;3447:45;:::i;:::-;3442:3;3435:58;3352:147;;:::o;3505:90::-;3539:7;3582:5;3575:13;3568:21;3557:32;;3505:90;;;:::o;3601:109::-;3682:21;3697:5;3682:21;:::i;:::-;3677:3;3670:34;3601:109;;:::o;3716:336::-;3839:4;3877:2;3866:9;3862:18;3854:26;;3890:79;3966:1;3955:9;3951:17;3942:6;3890:79;:::i;:::-;3979:66;4041:2;4030:9;4026:18;4017:6;3979:66;:::i;:::-;3716:336;;;;;:::o;4058:96::-;4092:8;4141:5;4136:3;4132:15;4111:36;;4058:96;;;:::o;4160:93::-;4197:7;4226:21;4241:5;4226:21;:::i;:::-;4215:32;;4160:93;;;:::o;4259:184::-;4372:64;4390:45;4429:5;4390:45;:::i;:::-;4372:64;:::i;:::-;4367:3;4360:77;4259:184;;:::o;4449:79::-;4488:7;4517:5;4506:16;;4449:79;;;:::o;4534:157::-;4639:45;4659:24;4677:5;4659:24;:::i;:::-;4639:45;:::i;:::-;4634:3;4627:58;4534:157;;:::o;4697:412::-;4845:3;4860:83;4939:3;4930:6;4860:83;:::i;:::-;4968:1;4963:3;4959:11;4952:18;;4980:75;5051:3;5042:6;4980:75;:::i;:::-;5080:2;5075:3;5071:12;5064:19;;5100:3;5093:10;;4697:412;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract RockPaperScissorsGameRules {\r\n    enum Choice {\r\n        Rock,\r\n        Paper,\r\n        Scissors\r\n    }\r\n\r\n    enum Outcome {\r\n        Player1Wins,\r\n        Player2Wins,\r\n        Draw\r\n    }\r\n\r\n    mapping(Choice => Choice) wins;\r\n\r\n    constructor() {\r\n        wins[Choice.Rock] = Choice.Scissors;\r\n        wins[Choice.Paper] = Choice.Rock;\r\n        wins[Choice.Scissors] = Choice.Paper;\r\n    }\r\n\r\n    function confront(Choice _player1Choice, Choice _player2Choice)\r\n        public\r\n        view\r\n        returns (Outcome)\r\n    {\r\n        if (_player1Choice == _player2Choice) {\r\n            return Outcome.Draw;\r\n        }\r\n\r\n        if (wins[_player1Choice] == _player2Choice) {\r\n            return Outcome.Player1Wins;\r\n        }\r\n\r\n        return Outcome.Player2Wins;\r\n    }\r\n    \r\n    // this function is intended to be used both externally and internally\r\n    // the extteral usage is meant for players to check the validity of their\r\n    // encoded choice against the contracts decoding function, since invalid\r\n    // encoding will lead them to loosing the game\r\n    function decodeSecretChoice(bytes32 _secretChoice, bytes32 _secret)\r\n        public\r\n        pure\r\n        returns (Choice choice, bool isValid)\r\n    {\r\n        isValid = true;\r\n\r\n        if (\r\n            keccak256(abi.encodePacked(Choice.Rock, _secret)) == _secretChoice\r\n        ) {\r\n            choice = Choice.Rock;\r\n        } else if (\r\n            keccak256(abi.encodePacked(Choice.Paper, _secret)) == _secretChoice\r\n        ) {\r\n            choice = Choice.Paper;\r\n        } else if (\r\n            keccak256(abi.encodePacked(Choice.Scissors, _secret)) ==\r\n            _secretChoice\r\n        ) {\r\n            choice = Choice.Scissors;\r\n        } else {\r\n            isValid = false;\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\repos\\rock-paper-scissors-solidity\\contracts\\RockPaperScissorsGame.sol",
  "ast": {
    "absolutePath": "project:/contracts/RockPaperScissorsGame.sol",
    "exportedSymbols": {
      "RockPaperScissorsGameRules": [
        1133
      ]
    },
    "id": 1134,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 983,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RockPaperScissorsGameRules",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1133,
        "linearizedBaseContracts": [
          1133
        ],
        "name": "RockPaperScissorsGameRules",
        "nameLocation": "78:26:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "RockPaperScissorsGameRules.Choice",
            "id": 987,
            "members": [
              {
                "id": 984,
                "name": "Rock",
                "nameLocation": "135:4:4",
                "nodeType": "EnumValue",
                "src": "135:4:4"
              },
              {
                "id": 985,
                "name": "Paper",
                "nameLocation": "150:5:4",
                "nodeType": "EnumValue",
                "src": "150:5:4"
              },
              {
                "id": 986,
                "name": "Scissors",
                "nameLocation": "166:8:4",
                "nodeType": "EnumValue",
                "src": "166:8:4"
              }
            ],
            "name": "Choice",
            "nameLocation": "117:6:4",
            "nodeType": "EnumDefinition",
            "src": "112:69:4"
          },
          {
            "canonicalName": "RockPaperScissorsGameRules.Outcome",
            "id": 991,
            "members": [
              {
                "id": 988,
                "name": "Player1Wins",
                "nameLocation": "213:11:4",
                "nodeType": "EnumValue",
                "src": "213:11:4"
              },
              {
                "id": 989,
                "name": "Player2Wins",
                "nameLocation": "235:11:4",
                "nodeType": "EnumValue",
                "src": "235:11:4"
              },
              {
                "id": 990,
                "name": "Draw",
                "nameLocation": "257:4:4",
                "nodeType": "EnumValue",
                "src": "257:4:4"
              }
            ],
            "name": "Outcome",
            "nameLocation": "194:7:4",
            "nodeType": "EnumDefinition",
            "src": "189:79:4"
          },
          {
            "constant": false,
            "id": 997,
            "mutability": "mutable",
            "name": "wins",
            "nameLocation": "302:4:4",
            "nodeType": "VariableDeclaration",
            "scope": 1133,
            "src": "276:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Choice_$987_$_t_enum$_Choice_$987_$",
              "typeString": "mapping(enum RockPaperScissorsGameRules.Choice => enum RockPaperScissorsGameRules.Choice)"
            },
            "typeName": {
              "id": 996,
              "keyType": {
                "id": 993,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 992,
                  "name": "Choice",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 987,
                  "src": "284:6:4"
                },
                "referencedDeclaration": 987,
                "src": "284:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Choice_$987",
                  "typeString": "enum RockPaperScissorsGameRules.Choice"
                }
              },
              "nodeType": "Mapping",
              "src": "276:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Choice_$987_$_t_enum$_Choice_$987_$",
                "typeString": "mapping(enum RockPaperScissorsGameRules.Choice => enum RockPaperScissorsGameRules.Choice)"
              },
              "valueType": {
                "id": 995,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 994,
                  "name": "Choice",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 987,
                  "src": "294:6:4"
                },
                "referencedDeclaration": 987,
                "src": "294:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Choice_$987",
                  "typeString": "enum RockPaperScissorsGameRules.Choice"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1024,
              "nodeType": "Block",
              "src": "329:144:4",
              "statements": [
                {
                  "expression": {
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1000,
                        "name": "wins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "340:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$987_$_t_enum$_Choice_$987_$",
                          "typeString": "mapping(enum RockPaperScissorsGameRules.Choice => enum RockPaperScissorsGameRules.Choice)"
                        }
                      },
                      "id": 1003,
                      "indexExpression": {
                        "expression": {
                          "id": 1001,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "345:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                            "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                          }
                        },
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Rock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 984,
                        "src": "345:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$987",
                          "typeString": "enum RockPaperScissorsGameRules.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "340:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1004,
                        "name": "Choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "360:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                          "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                        }
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Scissors",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "360:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "src": "340:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$987",
                      "typeString": "enum RockPaperScissorsGameRules.Choice"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "340:35:4"
                },
                {
                  "expression": {
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1008,
                        "name": "wins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "386:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$987_$_t_enum$_Choice_$987_$",
                          "typeString": "mapping(enum RockPaperScissorsGameRules.Choice => enum RockPaperScissorsGameRules.Choice)"
                        }
                      },
                      "id": 1011,
                      "indexExpression": {
                        "expression": {
                          "id": 1009,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "391:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                            "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                          }
                        },
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Paper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 985,
                        "src": "391:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$987",
                          "typeString": "enum RockPaperScissorsGameRules.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "386:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1012,
                        "name": "Choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "407:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                          "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Rock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 984,
                      "src": "407:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "src": "386:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$987",
                      "typeString": "enum RockPaperScissorsGameRules.Choice"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "386:32:4"
                },
                {
                  "expression": {
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1016,
                        "name": "wins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "429:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$987_$_t_enum$_Choice_$987_$",
                          "typeString": "mapping(enum RockPaperScissorsGameRules.Choice => enum RockPaperScissorsGameRules.Choice)"
                        }
                      },
                      "id": 1019,
                      "indexExpression": {
                        "expression": {
                          "id": 1017,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "434:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                            "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                          }
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Scissors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 986,
                        "src": "434:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$987",
                          "typeString": "enum RockPaperScissorsGameRules.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "429:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1020,
                        "name": "Choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "453:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                          "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Paper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 985,
                      "src": "453:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "src": "429:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$987",
                      "typeString": "enum RockPaperScissorsGameRules.Choice"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "429:36:4"
                }
              ]
            },
            "id": 1025,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:2:4"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:0:4"
            },
            "scope": 1133,
            "src": "315:158:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1058,
              "nodeType": "Block",
              "src": "607:250:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Choice_$987",
                      "typeString": "enum RockPaperScissorsGameRules.Choice"
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1037,
                      "name": "_player1Choice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "622:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1038,
                      "name": "_player2Choice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "640:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "src": "622:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1044,
                  "nodeType": "IfStatement",
                  "src": "618:84:4",
                  "trueBody": {
                    "id": 1043,
                    "nodeType": "Block",
                    "src": "656:46:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1040,
                            "name": "Outcome",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "678:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Outcome_$991_$",
                              "typeString": "type(enum RockPaperScissorsGameRules.Outcome)"
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Draw",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 990,
                          "src": "678:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Outcome_$991",
                            "typeString": "enum RockPaperScissorsGameRules.Outcome"
                          }
                        },
                        "functionReturnParameters": 1036,
                        "id": 1042,
                        "nodeType": "Return",
                        "src": "671:19:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Choice_$987",
                      "typeString": "enum RockPaperScissorsGameRules.Choice"
                    },
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1045,
                        "name": "wins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "718:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$987_$_t_enum$_Choice_$987_$",
                          "typeString": "mapping(enum RockPaperScissorsGameRules.Choice => enum RockPaperScissorsGameRules.Choice)"
                        }
                      },
                      "id": 1047,
                      "indexExpression": {
                        "id": 1046,
                        "name": "_player1Choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1028,
                        "src": "723:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$987",
                          "typeString": "enum RockPaperScissorsGameRules.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "718:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1048,
                      "name": "_player2Choice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "742:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$987",
                        "typeString": "enum RockPaperScissorsGameRules.Choice"
                      }
                    },
                    "src": "718:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1054,
                  "nodeType": "IfStatement",
                  "src": "714:97:4",
                  "trueBody": {
                    "id": 1053,
                    "nodeType": "Block",
                    "src": "758:53:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1050,
                            "name": "Outcome",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "780:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Outcome_$991_$",
                              "typeString": "type(enum RockPaperScissorsGameRules.Outcome)"
                            }
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Player1Wins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 988,
                          "src": "780:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Outcome_$991",
                            "typeString": "enum RockPaperScissorsGameRules.Outcome"
                          }
                        },
                        "functionReturnParameters": 1036,
                        "id": 1052,
                        "nodeType": "Return",
                        "src": "773:26:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "id": 1055,
                      "name": "Outcome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 991,
                      "src": "830:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Outcome_$991_$",
                        "typeString": "type(enum RockPaperScissorsGameRules.Outcome)"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Player2Wins",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 989,
                    "src": "830:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Outcome_$991",
                      "typeString": "enum RockPaperScissorsGameRules.Outcome"
                    }
                  },
                  "functionReturnParameters": 1036,
                  "id": 1057,
                  "nodeType": "Return",
                  "src": "823:26:4"
                }
              ]
            },
            "functionSelector": "1ef80bdd",
            "id": 1059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "confront",
            "nameLocation": "490:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "_player1Choice",
                  "nameLocation": "506:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1059,
                  "src": "499:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Choice_$987",
                    "typeString": "enum RockPaperScissorsGameRules.Choice"
                  },
                  "typeName": {
                    "id": 1027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1026,
                      "name": "Choice",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 987,
                      "src": "499:6:4"
                    },
                    "referencedDeclaration": 987,
                    "src": "499:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$987",
                      "typeString": "enum RockPaperScissorsGameRules.Choice"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "_player2Choice",
                  "nameLocation": "529:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1059,
                  "src": "522:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Choice_$987",
                    "typeString": "enum RockPaperScissorsGameRules.Choice"
                  },
                  "typeName": {
                    "id": 1030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1029,
                      "name": "Choice",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 987,
                      "src": "522:6:4"
                    },
                    "referencedDeclaration": 987,
                    "src": "522:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$987",
                      "typeString": "enum RockPaperScissorsGameRules.Choice"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "498:46:4"
            },
            "returnParameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1059,
                  "src": "593:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Outcome_$991",
                    "typeString": "enum RockPaperScissorsGameRules.Outcome"
                  },
                  "typeName": {
                    "id": 1034,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1033,
                      "name": "Outcome",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 991,
                      "src": "593:7:4"
                    },
                    "referencedDeclaration": 991,
                    "src": "593:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Outcome_$991",
                      "typeString": "enum RockPaperScissorsGameRules.Outcome"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "592:9:4"
            },
            "scope": 1133,
            "src": "481:376:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "1304:557:4",
              "statements": [
                {
                  "expression": {
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1071,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "1315:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1325:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1315:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1074,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:14:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1078,
                                "name": "Choice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 987,
                                "src": "1387:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                                  "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                                }
                              },
                              "id": 1079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Rock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "1387:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Choice_$987",
                                "typeString": "enum RockPaperScissorsGameRules.Choice"
                              }
                            },
                            {
                              "id": 1080,
                              "name": "_secret",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1063,
                              "src": "1400:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Choice_$987",
                                "typeString": "enum RockPaperScissorsGameRules.Choice"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 1076,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "1370:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1370:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1370:38:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1075,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967288,
                        "src": "1360:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1360:49:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1083,
                      "name": "_secretChoice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1061,
                      "src": "1413:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1360:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1094,
                                  "name": "Choice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 987,
                                  "src": "1536:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                                    "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                                  }
                                },
                                "id": 1095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Paper",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 985,
                                "src": "1536:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Choice_$987",
                                  "typeString": "enum RockPaperScissorsGameRules.Choice"
                                }
                              },
                              {
                                "id": 1096,
                                "name": "_secret",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1063,
                                "src": "1550:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Choice_$987",
                                  "typeString": "enum RockPaperScissorsGameRules.Choice"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 1092,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "1519:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "1519:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1519:39:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1091,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "1509:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1509:50:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1099,
                        "name": "_secretChoice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1061,
                        "src": "1563:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "1509:67:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1110,
                                    "name": "Choice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 987,
                                    "src": "1687:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                                      "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                                    }
                                  },
                                  "id": 1111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Scissors",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 986,
                                  "src": "1687:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Choice_$987",
                                    "typeString": "enum RockPaperScissorsGameRules.Choice"
                                  }
                                },
                                {
                                  "id": 1112,
                                  "name": "_secret",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1063,
                                  "src": "1704:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_Choice_$987",
                                    "typeString": "enum RockPaperScissorsGameRules.Choice"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1108,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1670:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1670:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1670:42:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1107,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1660:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1660:53:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1115,
                          "name": "_secretChoice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "1730:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1660:83:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1127,
                        "nodeType": "Block",
                        "src": "1812:42:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1123,
                                "name": "isValid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1069,
                                "src": "1827:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "66616c7365",
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1837:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "1827:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1126,
                            "nodeType": "ExpressionStatement",
                            "src": "1827:15:4"
                          }
                        ]
                      },
                      "id": 1128,
                      "nodeType": "IfStatement",
                      "src": "1642:212:4",
                      "trueBody": {
                        "id": 1122,
                        "nodeType": "Block",
                        "src": "1755:51:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1117,
                                "name": "choice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1067,
                                "src": "1770:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Choice_$987",
                                  "typeString": "enum RockPaperScissorsGameRules.Choice"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 1118,
                                  "name": "Choice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 987,
                                  "src": "1779:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                                    "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                                  }
                                },
                                "id": 1119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Scissors",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 986,
                                "src": "1779:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Choice_$987",
                                  "typeString": "enum RockPaperScissorsGameRules.Choice"
                                }
                              },
                              "src": "1770:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Choice_$987",
                                "typeString": "enum RockPaperScissorsGameRules.Choice"
                              }
                            },
                            "id": 1121,
                            "nodeType": "ExpressionStatement",
                            "src": "1770:24:4"
                          }
                        ]
                      }
                    },
                    "id": 1129,
                    "nodeType": "IfStatement",
                    "src": "1491:363:4",
                    "trueBody": {
                      "id": 1106,
                      "nodeType": "Block",
                      "src": "1588:48:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 1104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1101,
                              "name": "choice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1067,
                              "src": "1603:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Choice_$987",
                                "typeString": "enum RockPaperScissorsGameRules.Choice"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 1102,
                                "name": "Choice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 987,
                                "src": "1612:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                                  "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                                }
                              },
                              "id": 1103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Paper",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 985,
                              "src": "1612:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Choice_$987",
                                "typeString": "enum RockPaperScissorsGameRules.Choice"
                              }
                            },
                            "src": "1603:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Choice_$987",
                              "typeString": "enum RockPaperScissorsGameRules.Choice"
                            }
                          },
                          "id": 1105,
                          "nodeType": "ExpressionStatement",
                          "src": "1603:21:4"
                        }
                      ]
                    }
                  },
                  "id": 1130,
                  "nodeType": "IfStatement",
                  "src": "1342:512:4",
                  "trueBody": {
                    "id": 1090,
                    "nodeType": "Block",
                    "src": "1438:47:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1085,
                            "name": "choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "1453:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Choice_$987",
                              "typeString": "enum RockPaperScissorsGameRules.Choice"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1086,
                              "name": "Choice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 987,
                              "src": "1462:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Choice_$987_$",
                                "typeString": "type(enum RockPaperScissorsGameRules.Choice)"
                              }
                            },
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Rock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 984,
                            "src": "1462:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Choice_$987",
                              "typeString": "enum RockPaperScissorsGameRules.Choice"
                            }
                          },
                          "src": "1453:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$987",
                            "typeString": "enum RockPaperScissorsGameRules.Choice"
                          }
                        },
                        "id": 1089,
                        "nodeType": "ExpressionStatement",
                        "src": "1453:20:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "3a53dfd1",
            "id": 1132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeSecretChoice",
            "nameLocation": "1163:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "_secretChoice",
                  "nameLocation": "1190:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "1182:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "_secret",
                  "nameLocation": "1213:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "1205:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1181:40:4"
            },
            "returnParameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "choice",
                  "nameLocation": "1277:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "1270:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Choice_$987",
                    "typeString": "enum RockPaperScissorsGameRules.Choice"
                  },
                  "typeName": {
                    "id": 1066,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1065,
                      "name": "Choice",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 987,
                      "src": "1270:6:4"
                    },
                    "referencedDeclaration": 987,
                    "src": "1270:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$987",
                      "typeString": "enum RockPaperScissorsGameRules.Choice"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "isValid",
                  "nameLocation": "1290:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "1285:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:29:4"
            },
            "scope": 1133,
            "src": "1154:707:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1134,
        "src": "69:1795:4",
        "usedErrors": []
      }
    ],
    "src": "33:1833:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-04-28T09:55:12.139Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}